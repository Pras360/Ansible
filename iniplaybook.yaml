---
- name: Playbook ini akan mengerjakan beberapa task untuk cek status
  hosts: managed
  become: yes
  vars:
    disk_name: "/dev/sdb"
    mount_point: "/APP"
    fs_type: "xfs"
    partition_number: 1
    partition_start: "0%"
    partition_end: "100%"

  tasks:
    - name: Mengubah atau mengedit file /etc/yum.conf
      ansible.builtin.lineinfile:
        path: /etc/yum.conf
        regexp: '^proxy='
        state: absent

    - name: tampilkan hasil dari cat /etc/yum.conf
      ansible.builtin.shell: cat /etc/yum.conf
      register: hasil_yumconf
    - debug: 
      # msg: "isi konfigurasi hasil_yumconf: {{ hasil_yumconf.stdout_lines }}" 
        var: hasil_yumconf.stdout_lines

    - name: mengubah hostname 
      ansible.builtin.shell: hostnamectl hostname managednodes

    - name: Menampilkan hostname
      ansible.builtin.shell: hostnamectl
      register: hasil_hostname
    - debug:
        var: hasil_hostname.stdout_lines 

    - name: mengedit vchrony 
      ansible.builtin.lineinfile:
        path: /etc/chrony.conf
        regexp: '^pool 2.centos.pool.ntp.org iburst'
        state: absent

    - name: menambahkan 2 server NTP
      ansible.builtin.blockinfile:
        path: /etc/chrony.conf
        insertafter: '^# Please'
        block: |
          server 10.9.11.22 iburst
          server 10.14.11.22 iburst
          server local.alto.id iburst
        marker: "# {mark} ANSIBLE MANAGED SERVICES"
  
    - name: Menonaktifkan sourcedir
      ansible.builtin.replace:
        path: /etc/chrony.conf
        regexp: '^sourcedir /run/chrony-dhcp'
        replace: '#sourcedir /run/chrony-dhcp'

    - name: menjalankan chronyd secara permanent
      ansible.builtin.shell: systemctl enable --now chronyd

    - name: menampilkan status chronyd
      ansible.builtin.shell: systemctl status chronyd
      register: hasil_chronyd

    - debug:
        var: hasil_chronyd.stdout_lines

    - name: set timezone ke jakarta
      ansible.builtin.shell: timedatectl set-timezone "Asia/Jakarta"

    - name: Menampilkan hasil timedatectl
      ansible.builtin.shell: timedatectl
      register: hasil_timedatectl

    - debug: 
        var: hasil_timedatectl.stdout_lines

    - name: menambahkan dns resolver di resolv.conf
      ansible.builtin.blockinfile:
        path: /etc/resolv.conf
        insertafter: '^# Generated'
        block: |
          search local.alto.id
          nameserver 10.9.11.22
          nameserver 10.14.11.22
        marker: '# {mark} ANSIBLE MANAGE SERVICES'

    - name: menampilkan /etc/resolv.conf
      ansible.builtin.shell: cat /etc/resolv.conf
      register: hasil_resolv

    - debug: 
        var: hasil_resolv.stdout_lines

    - name: Menginput banner motd
      ansible.builtin.blockinfile:
        path: /etc/motd
        block: |
          ################################# WARNING ########################################  
          ************** This is a company computer system, Notice to all users, *********** 
          
            This computer is the property of ALTO NETWORK, This computer system, including   
            all related equipment, networks and network devices ( specifically including   
            internet access) (“System”) are provided only for authorized employees of   
            ALTO NETWORK., Any or all use of this System may be intercepted, monitored,   
            recorded and audited for all lawful purposes, including to ensure their use   
            this authorized, for management of the system, to facilitate protection against   
            unauthorized access to verify security procedures., Unauthorized or improper   
            use of this System may result in disciplinary action and/or civil charges/criminal   
            penalties and/or prosecution by law. Evidence of unauthorized use collected during   
            monitoring may be used for administrative, criminal, or other adverse action., By   
            continuing to use this System you indicate your awareness of and consent to these   
            terms and conditions of use.,   
          
          **********************************************************************************  
          ################################################################################## 
        marker: '# {mark} ANSIBLE MANAGE SERVICES'

    - name: menampilkan hasil motd
      ansible.builtin.shell: cat /etc/motd
      register: hasil_motd

    - debug: 
        var: hasil_motd.stdout_lines

    - name: mengintall beberapa package
      ansible.builtin.yum: 
        name:
          - traceroute
          - iputils
          - telnet
        state: present
      register: hasil_yum
      ignore_errors: yes

    - debug:
        var: hasil_yum.stdout_lines

    - name: Pengecekan apakah sudah ada partisi
      command: "lsblk -n -o NAME {{ disk_name }}{{ partition_number }}"
      register: cek_partisi
      ignore_errors: yes

    - name: membuat partisi jika belum ada 
      command: "parted -s {{ disk_name }} mklabel msdos mkpart primary {{ partition_start }} {{ partition_end }}"
      when: cek_partisi.rc != 0

    - name: Memeriksa apakah filesystem sudah ada
      command: "blkid -o value -s TYPE {{ disk_name }}{{ partition_number }}"
      register: cek_fs
      ignore_errors: yes

    - name: membuat filesystem jika belum ada
      command: "mkfs.{{ fs_type }} -f {{ disk_name }}{{ partition_number }}"
      when: cek_fs.stdout == ""

    - name: memeriksa apakah mount point sudah ada 
      file:
        path: "{{ mount_point }}"
        state: directory
    
    - name: periksa file pada fstab apakah sudah terpasang
      command: "grep -Fx '{{ disk_name }}{{ partition_number}} {{ mount_point }} {{ fs_type }} defaults 0 0' /etc/fstab"
      register: cek_fstab
      ignore_errors: yes

    - name: tambahkan mount point ke fstab jika belum ada
      ansible.builtin.lineinfile: 
        path: /etc/fstab
        line: "{{ disk_name }}{{ partition_number }} {{ mount_point }} {{ fs_type }} defaults 0 0"
        state: present
      when: cek_fstab.rc != 0

    - name: mount filesystem
      ansible.builtin.mount: 
        path: "{{ mount_point }}"
        src: "{{ disk_name }}{{ partition_number }}"
        fstype: "{{ fs_type }}"
        opts: defaults
        state: mounted
      
    - name: Pengecekan apakah sudah ada partisi
      command: "lsblk -n -o NAME {{ disk_name }}{{ partition_number }}"
      register: cek_partisi
      ignore_errors: yes

    - name: membuat partisi jika belum ada
      command: "parted -s {{ disk_name }} mklabel msdos mkpart primary {{ partition_start }} {{ partition_end }}"
      when: cek_partisi.rc != 0

    - name: Memeriksa apakah filesystem sudah ada
      command: "blkid -o value -s TYPE {{ disk_name }}{{ partition_number }}"
      register: cek_fs
      ignore_errors: yes

    - name: membuat filesystem jika belum ada
      command: "mkfs.{{ fs_type }} -f {{ disk_name }}{{ partition_number }}"
      when: cek_fs.stdout == ""

    - name: memeriksa apakah mount point sudah ada
      file:
        path: "{{ mount_point }}"
        state: directory

    - name: periksa file pada fstab apakah sudah terpasang
      command: "grep -Fx '{{ disk_name }}{{ partition_number}} {{ mount_point }} {{ fs_type }} defaults 0 0' /etc/fstab"
      register: cek_fstab
      ignore_errors: yes

    - name: tambahkan mount point ke fstab jika belum ada
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: "{{ disk_name }}{{ partition_number }} {{ mount_point }} {{ fs_type }} defaults 0 0"
        state: present
      when: cek_fstab.rc != 0

    - name: mount filesystem
      ansible.builtin.mount:
        path: "{{ mount_point }}"
        src: "{{ disk_name }}{{ partition_number }}"
        fstype: "{{ fs_type }}"
        opts: defaults
        state: mounted

    - name: stop and disable status firewalld
      ansible.builtin.shell: |
        systemctl stop firewalld
        systemctl disable firewalld

    - name: pengecekan status firewalld
      ansible.builtin.shell: systemctl status firewalld
      register: hasil_firewalld 
      failed_when: false
    - debug:
        var: hasil_firewalld.stdout_lines

    - name: Mengubah status selinux menjadi permissive
      ansible.builtin.command: setenforce 0

    - name: Mengecek status selinux
      ansible.builtin.command: getenforce
      register: hasil_getenforce

    - debug: 
        var: hasil_getenforce.stdout

    - name: mengubah file /etc/selinux ke disabled
      ansible.builtin.replace: 
        path: /etc/selinux/config
        regexp: "^SELINUX=.*"
        replace: "SELINUX=Disabled"
      when: hasil_getenforce.stdout == "Permissive"

    - name: Menginstall net-snmp net-snmp-utils -y
      ansible.builtin.yum:
        name: 
          - net-snmp
          - net-snmp-utils
        state: present
    - name: mengecek apakah user altoprtgcom sudah ada
      ansible.builtin.shell: grep -q '^rouser altoprtgcom' /etc/snmp/snmpd.conf
      register: cek_usersnmp 
      ignore_errors: true 

    - name: membuat user snmp
      ansible.builtin.shell: > 
        net-snmp-create-v3-user -ro -A prtguser -a MD5 -x AES altoprtgcom
      when: cek_usersnmp.rc != 0

    - name: mengubah com2sec 
      ansible.builtin.replace:
        path: /etc/snmp/snmpd.conf
        regexp: "^com2sec"
        replace: "#com2sec"

    - name: mengubah group
      ansible.builtin.replace:
        path: /etc/snmp/snmpd.conf
        regexp: "^group"
        replace: "#group"

    - name: menampilkan hasil perubahan pada snmpd.conf
      ansible.builtin.command: cat /etc/snmp/snmpd.conf
      register: hasil_snmpdconf

    - debug: 
        var: hasil_snmpdconf.stdout_lines

    - name: start service snmpd
      ansible.builtin.shell: systemctl enable --now snmpd

    - name: cek status service snmpd
      ansible.builtin.shell: systemctl status snmpd
      register: hasil_statussnmp

    - debug:
        var: hasil_statussnmp.stdout_lines

    - name: join domain
      ansible.builtin.yum:
        name:
          - realmd
          - sssd
          - sssd-tools
          - adcli
          - oddjob
          - oddjob-mkhomedir
          - samba-common-tools
        state: present

          #- name: join domain jika belum
          # expect: 
          # command: realm join --user=us.noc local.alto.id
          # responses: 
          # Password for us.noc: "Password" 
          # when: "local.alto.id' not in hasil_realm.stdout"
